{
    "openapi": "3.0.0",
    "info": {
        "title": "Your super  ApplicationAPI",
        "version": "1.0.0"
    },
    "paths": {
        "/api/elasticdemo": {
            "get": {
                "tags": [
                    "Record"
                ],
                "summary": "Get all Elasticdemo records",
                "operationId": "90af960ba42550854cad1b5a44678b4b",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "readOnly": "true",
                                                        "example": "1"
                                                    },
                                                    "name": {
                                                        "description": "name",
                                                        "type": "string"
                                                    },
                                                    "street": {
                                                        "description": "address",
                                                        "type": "string",
                                                        "example": "user@gmail.com"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "maxLength": 10
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "maxLength": 10,
                                                        "example": "John"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-04-23T23:23:17.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-04-23T23:26:11.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "quote": {
                                            "type": "string",
                                            "example": "Inspiring quote"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/get-records": {
            "get": {
                "tags": [
                    "Record"
                ],
                "summary": "Get records",
                "description": "Get records from Elasticdemo table",
                "operationId": "getRecords",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Elasticdemo"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/get-record/{id}": {
            "get": {
                "tags": [
                    "Record"
                ],
                "summary": "Get a single record",
                "description": "Returns a single record based on the provided ID",
                "operationId": "getRecord",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the record to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "record": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "street": {
                                                    "type": "string",
                                                    "example": "123 Main St"
                                                },
                                                "number": {
                                                    "type": "string",
                                                    "example": "12345"
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "ABC123"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-04-24T10:30:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-04-24T10:30:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Record not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/store": {
            "post": {
                "tags": [
                    "Record"
                ],
                "summary": "Store a new record",
                "operationId": "6a94ef69ac88f445005c5883deb7d78e",
                "requestBody": {
                    "description": "Provide record data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "street": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "number": {
                                        "type": "string",
                                        "example": "555-1234"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "A1B2C3"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Record created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Record created"
                                        },
                                        "record": {
                                            "$ref": "#/components/schemas/Elasticdemo"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/elasticdemo/{id}": {
            "delete": {
                "tags": [
                    "Record"
                ],
                "summary": "Delete a record from Elasticdemo table.",
                "description": "Delete a record from Elasticdemo table",
                "operationId": "e39f0b382d4d2c38c82fbe5aea366f3d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the record to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record deleted successfully"
                    },
                    "404": {
                        "description": "Record not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Record"
                ],
                "summary": "Update a record",
                "description": "Update a record in the elasticdemo table.",
                "operationId": "82aeb14e7b18945285db9ab095748d95",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the record to update.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New data for the record",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Elasticdemo"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Record updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Record updated."
                                        },
                                        "record": {
                                            "$ref": "#/components/schemas/Elasticdemo"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Record not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Record not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation errors."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/inspire": {
            "get": {
                "tags": [
                    "General"
                ],
                "summary": "Get an inspirational quote",
                "description": "Returns a random quote from the Artisan command inspire",
                "operationId": "8a64bce17624951da3c9dfa2e5fd74af",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "quote": {
                                            "description": "The inspirational quote",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/elasticdemo/delete-all": {
            "delete": {
                "tags": [
                    "Record"
                ],
                "summary": "Delete all records from the Elasticdemo table",
                "operationId": "0de12711b8b7a7b539342eb65a22ef19",
                "responses": {
                    "204": {
                        "description": "All records have been deleted successfully"
                    }
                }
            }
        },
        "/api/run-seeder": {
            "post": {
                "tags": [
                    "Record"
                ],
                "summary": "Insert fake data into elasticdemos table",
                "description": "Populates the elasticdemos table with fake data using Laravel's Model Factories.",
                "operationId": "bcbe34a9254889691a0909799977e245",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Seeder executed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Elasticdemo": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true,
                        "example": 33
                    },
                    "name": {
                        "description": "Name",
                        "type": "string",
                        "example": "Alanna Hill Jr.s"
                    },
                    "street": {
                        "description": "Address",
                        "type": "string",
                        "example": "82258 Larue Walk Suite 407"
                    },
                    "number": {
                        "type": "string",
                        "maxLength": 10,
                        "example": "2953"
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 10,
                        "example": "01819"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-04-23T23:23:17.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-04-23T23:26:11.000000Z"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Elasticdemo"
                }
            }
        }
    }
}